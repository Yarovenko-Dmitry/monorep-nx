#FROM — задаёт базовый (родительский) образ.
FROM node
#WORKDIR — задаёт рабочую директорию для следующей инструкции.
# Инструкция WORKDIR устанавливает рабочий каталог для всех инструкций RUN, CMD, ENTRYPOINT, COPY и ADD которые будут выполнены в Dockerfile. Если WORKDIR не задана, то она будет создана даже если в Dockerfile нет ни одной инструкции для которой это необходимо.
WORKDIR /test-dir-docker
#RUN — выполняет команду и создаёт слой образа. Используется для установки в контейнер пакетов.
RUN yarn
#LABEL добавляет метаданные для образа
#EXPOSE — указывает на необходимость открыть порт.
# Инструкция EXPOSE указывает Docker что контейнер слушает определенные порты после запуска.
#ENV — устанавливает постоянные переменные среды.
ENV DOCKER_API_KEY="DOCKER_API_KEY_testing"
#ADD — копирует файлы и папки в контейнер, может распаковывать локальные .tar-файлы.
#COPY — копирует в контейнер файлы и папки.
COPY . /test-dir-docker
# ENTRYPOINT — предоставляет команду с аргументами для вызова во время выполнения контейнера. Аргументы не переопределяются.
# VOLUME — создаёт точку монтирования для работы с постоянным хранилищем.
# USER устанавливает имя ползователя (UID) от имени которого будет запущен образ, а также инструкции RUN, CMD и ENTRYPOINT содержащиеся в Dockerfile.
#ARG — задаёт переменные для передачи Docker во время сборки образа.
# ONBUILD добавляет к образу триггерную инструкцию, которая выполняется в последнюю очередь если образ используется в качестве базового для другой сборки. Триггер будет выполнен в дочернем контексте сборки, так если бы инструкция была вставлена сразу после инструкции FROM дочернего Dockerfile.
# STOPSIGNAL устанавливает сигнал системного вызова, который будет отправлен для завершения контейнера.
# HEALTHCHECK указывает Docker как проверить работает ли контейнер. Данная функция может помочь в выявлении ситуаций когда веб-сервер вошел в бесконечный цикл и не принимает соединения, в то время как его процесс все еще работает.
# SHELL позволяет заменить стандартную оболочку для выполнения команд на пользовательскую.
#CMD — описывает команду с аргументами, которую нужно выполнить когда контейнер будет запущен. Аргументы могут быть переопределены при запуске контейнера. В файле может присутствовать лишь одна инструкция CMD.
# Основное предназначение CMD передача параметров по-умолчанию для запуска контейнера.
CMD node ./main.js
